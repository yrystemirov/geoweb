version: '3.8'
services:
  # frontend:
  #  image: geoweb-frontend:0.0.1
  #  container_name: ${FRONTEND_CONTAINER}
  #  build:
  #   context: .
  #   dockerfile: ./docker/frontend/Dockerfile
  #  restart: always
  #  ports:
  #    - '3000:3000'
  # nginx: 
  #   build:
  #     context: .
  #     dockerfile: ./docker/nginx/Dockerfile
  #   ports:
  #     - 80:80
  api:
    container_name: ${API_CONTAINER}
    image: geoweb-api:0.0.1
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    ports:
      - "${API_EXTERNAL_PORT}:${API_INTERNAL_PORT}"
    volumes:
      - geoserver_icons:${APP_GEOSERVER_ICONS_PATH}
    depends_on:
      - db
      - minio
      - geoserver
    environment:
      SERVER_PORT: ${API_INTERNAL_PORT}
      SPRING_DATASOURCE_URL: jdbc:postgresql://${POSTGRES_CONTAINER}:${POSTGRES_INTERNAL_PORT}/${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_INTERNAL_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      JWT_ACCESS_EXPIRY_MINUTES: ${JWT_ACCESS_EXPIRY_MINUTES}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_REFRESH_EXPIRY_DAYS: ${JWT_REFRESH_EXPIRY_DAYS}
      GEOSERVER_URL: http://${GEOSERVER_CONTAINER}:8080/geoserver/
      GEOSERVER_WORKSPACE: ${GEOSERVER_WORKSPACE}
      GEOSERVER_DATASTORE: ${GEOSERVER_DATASTORE}
      GEOSERVER_ADMIN_USER: ${GEOSERVER_ADMIN_USER}
      GEOSERVER_ADMIN_PASSWORD: ${GEOSERVER_ADMIN_PASSWORD}
      APP_MINIO_HOST: http://${MINIO_CONTAINER}
      APP_MINIO_PORT: ${MINIO_PORT}
      APP_MINIO_USER: ${MINIO_ROOT_USER}
      APP_MINIO_PASSWORD: ${MINIO_ROOT_PASSWORD}
      APP_GEOSERVER_ICONS_PATH: ${APP_GEOSERVER_ICONS_PATH}
      GEOSERVER_DATA_DIR: ${GEOSERVER_DATA_DIR}
      GEOSERVER_ICONS_PATH: ${GEOSERVER_ICONS_PATH}
  db:
    container_name: ${POSTGRES_CONTAINER}
    image: 'postgis/postgis:latest'
    platform: linux/amd64
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:${POSTGRES_INTERNAL_PORT}"
    volumes:
      - ./infrastructure/db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
      - ./docker-data/postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
  # pgadmin:
  #   container_name: ${PGADMIN_CONTAINER}
  #   image: dpage/pgadmin4:7
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
  #   ports:
  #     - "5151:80"
  #   volumes:
  #     - ./docker-data/pgadmin-data:/var/lib/pgadmin
  minio:
    container_name: ${MINIO_CONTAINER}
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./docker-data/minio-data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /data
  geoserver:
      image: kartoza/geoserver:${GEOSERVER_VERSION}
      container_name: ${GEOSERVER_CONTAINER}
      volumes:
        - ./docker-data/geoserver-data:/opt/geoserver/data_dir
        - geoserver_icons:${GEOSERVER_DATA_DIR}${GEOSERVER_ICONS_PATH}
      ports:
        - ${GEOSERVER_PORT}:8080
      restart: on-failure
      environment:
        - GEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}
        - GEOWEBCACHE_CACHE_DIR=${GEOWEBCACHE_CACHE_DIR}
        - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
        - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
        - INITIAL_MEMORY=${INITIAL_MEMORY}
        - MAXIMUM_MEMORY=${MAXIMUM_MEMORY}
        - STABLE_EXTENSIONS=${STABLE_EXTENSIONS}
        - COMMUNITY_EXTENSIONS=${COMMUNITY_EXTENSIONS}
        - GEOSERVER_CONTEXT_ROOT=${GEOSERVER_CONTEXT_ROOT}
      depends_on:
        - db
networks:
  default:
    name: ${DOCKER_NETWORK_NAME}
    #external: true
volumes:
  geoserver_icons: